package com.x.vulnerability;

import java.util.HashSet;
import java.util.Iterator;

import android.content.Context;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.os.Build;
import android.os.Handler;
import android.os.Message;
import android.support.v4.app.LoaderManager;
import android.support.v4.content.Loader;
import android.util.Log;

import com.x.util.Constants;
import com.x.util.DexLoader.DexLoaderCallback;
import com.x.util.IScanner;

/**
 * CVE_2014_8609 description: 
 * <p>The addAccount method in src/com/android/settings/accounts/AddAccountSettings.java in the Settings application in Android before 5.0.0 does not properly create a PendingIntent, which allows attackers to use the SYSTEM uid for broadcasting an intent with arbitrary component, action, or category information via a third-party authenticator in a crafted application, aka Bug 17356824.	
 * @author ouhf1
 */
public class CVE20148609Scanner implements IScanner<HashSet<String>> {

	//represents what we are interested
	private static String TARGET = "com.android.settings";
	
	@Override
	public void onScanFinished(Loader<HashSet<String>> loader,
			HashSet<String> data) {
		Log.i(TAG, "OnDexfileLoadFinished");
		
		mFind = false;
		Iterator<String> iter = data.iterator();
		while(iter.hasNext()) {
			String s = iter.next();
			if(s.contains("SHOULDN'T RESOLVE!")) {
				mFind = true;
				break;
			}
		}

		Message msg = new Message();
		msg.what = Constants.VULN_TYPE_CVE_2014_8609;

		if(mFind) {
			msg.arg1 = 0;
		} else {
			msg.arg1 = 1;
		}

		mHandler.sendMessage(msg);

	}

	private static String TAG = "CVE20148609";
	private Context mContext;
	private PackageManager mPackageManager;
	private LoaderManager mLoaderManager;
	private Handler mHandler;
	private boolean mFind = false;

	/**
	 * @param context: Context
	 * @param pm: PackageManager
	 * @param lm: LoaderManager
	 * @param handler: Handler
	 */
	public CVE20148609Scanner(Context context, PackageManager pm, LoaderManager lm, Handler handler) {
		mContext = context;
		mPackageManager = pm;
		mLoaderManager = lm;
		mHandler = handler;
	}

	@Override
	public void start() {
		init();
	}

	private void init() {

		if(Build.VERSION.SDK_INT < android.os.Build.VERSION_CODES.ICE_CREAM_SANDWICH 
				|| Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.LOLLIPOP) {
			Message msg = new Message();
			msg.what = Constants.VULN_TYPE_CVE_2014_8609;
			msg.arg1 = 0;
			mHandler.sendMessage(msg);
			return;
		}

		try {
			ApplicationInfo appInfo = mPackageManager.getApplicationInfo(TARGET, PackageManager.GET_META_DATA);
			String apkPath = appInfo.publicSourceDir;
			Log.i(TAG, "Package [com.android.settings] apk file path : " + apkPath);
			DexLoaderCallback callback = new DexLoaderCallback(mContext,apkPath,null,Constants.PARSE_STRING,this);
			mLoaderManager.initLoader(callback.hashCode(), null, callback);
		} catch (NameNotFoundException e) {
			e.printStackTrace();
		}
	}

}
